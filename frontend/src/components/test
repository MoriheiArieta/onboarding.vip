import React, { useState, useEffect, useRef } from "react";
import { Handle, Position } from "@xyflow/react";

const DiamondNode = ({ data }) => {
  const [size, setSize] = useState(40);
  const textRef = useRef(null);

  useEffect(() => {
    if (textRef.current) {
      const textWidth = textRef.current.scrollWidth;
      const textHeight = textRef.current.scrollHeight;
      const maxDimension = Math.max(textWidth, textHeight, 40);
      setSize(maxDimension * 1.2);
    }
  }, [data.label]);

  const nodeStyle = {
    width: size,
    height: size,
    position: "relative",
    transform: `translate(-${size / 2}px, -${size / 2}px)`,
  };

  const diamondStyle = {
    width: "70%",
    height: "70%",
    transform: "rotate(45deg)",
    background: "#659a40",
    position: "absolute",
    top: "15%",
    left: "15%",
  };

  const labelStyle = {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    fontSize: 12,
    color: "white",
    padding: "5px",
    textAlign: "center",
    wordWrap: "break-word",
    overflowWrap: "break-word",
  };

  const handleStyle = {
    background: "#659a40",
    width: 8,
    height: 8,
    borderRadius: "50%",
  };

  return (
    <div style={nodeStyle}>
      <Handle type="target" position={Position.Top} style={handleStyle} />
      <div style={diamondStyle} />
      <div style={labelStyle}>
        <span ref={textRef}>{data.label}</span>
      </div>
      <Handle type="source" position={Position.Bottom} style={handleStyle} />
    </div>
  );
};

export default DiamondNode;